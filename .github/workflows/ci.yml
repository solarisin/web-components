name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-test-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup .NET build dependencies
        uses: ./.github/workflows/composite/bootstrap-dotnet
        with:
          github-packages: true
          github-username: ${{ github.actor }}
          github-secret: ${{ secrets.GITHUB_TOKEN }}
            
      - name: .NET Build Solution
        run: dotnet build ./Solarisin.Web.Components.sln --configuration Release
        
      - name: .NET Execute Unit Tests
        run: dotnet test ./Solarisin.Web.Components.sln --no-restore --verbosity normal --configuration Release
          
      - name: Parse Trx files
        if: ${{ always() }}
        uses: solarisin/trx-parser@dev3
        id: trx-parser
        with:
          TRX_PATH: ./test/output/
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BADGE_STYLE: emoji
        
  build-test-debug:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup .NET build dependencies
        uses: ./.github/workflows/composite/bootstrap-dotnet
        with:
          github-packages: true
          github-username: ${{ github.actor }}
          github-secret: ${{ secrets.GITHUB_TOKEN }}

      - name: .NET Build Solution
        env:
          CI_BUILD: true
        run: dotnet build ./Solarisin.Web.Components.sln --configuration Debug

      # TODO: add code coverage for debug build
      - name: .NET Execute Unit Tests
        run: dotnet test ./Solarisin.Web.Components.sln --no-restore --verbosity normal --configuration Debug

      - name: Parse Trx files
        if: ${{ always() }}
        uses: solarisin/trx-parser@dev3
        id: trx-parser
        with:
          TRX_PATH: ./test/output/
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BADGE_STYLE: emoji