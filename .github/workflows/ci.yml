name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test-release:
    runs-on: ubuntu-latest
    env:
      TRX_DIRECTORY: ./test/output/Release
      CONFIGURATION: Release
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of sonarqube analysis
      - name: Bootstrap dotnet dependencies
        uses: ./.github/workflows/composite/bootstrap-dotnet
        with:
          github-packages: true
          github-username: ${{ github.actor }}
          github-secret: ${{ secrets.GITHUB_TOKEN }}
      - name: Execute dotnet build
        run: >
          dotnet build ./Solarisin.Web.Components.sln
          --configuration ${{ env.CONFIGURATION }}
        shell: run
      - name: Execute dotnet test
        run: >
          dotnet test ./Solarisin.Web.Components.sln
          --configuration ${{ env.CONFIGURATION }}
          --verbosity normal
          --settings coverlet.runsettings
          --collect:"XPlat Code Coverage"
          --logger:trx --no-restore
        shell: run
      - name: Parse TRX File
        if: ${{ always() }}
        uses: solarisin/trx-parser@dev3
        id: trx-parser
        with:
          TRX_PATH: ${{ env.TRX_DIRECTORY }}
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BADGE_STYLE: emoji
  build-test-analyze-debug:
    runs-on: windows-latest
    env:
      TRX_DIRECTORY: ./test/output/Debug
      CONFIGURATION: Debug
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of sonarqube analysis
      - name: Bootstrap dotnet dependencies
        uses: ./.github/workflows/composite/bootstrap-dotnet
        with:
          github-packages: true
          github-username: ${{ github.actor }}
          github-secret: ${{ secrets.GITHUB_TOKEN }}
      - name: Execute dotnet build
        run: >
          dotnet build ./Solarisin.Web.Components.sln
          --configuration ${{ env.CONFIGURATION }}
        shell: run
      - name: Execute dotnet test
        run: >
          dotnet test ./Solarisin.Web.Components.sln
          --configuration ${{ env.CONFIGURATION }}
          --verbosity normal
          --settings coverlet.runsettings
          --collect:"XPlat Code Coverage"
          --logger:trx --no-restore
        shell: run
      - name: Parse TRX File
        if: ${{ always() }}
        uses: solarisin/trx-parser@dev3
        id: trx-parser
        with:
          TRX_PATH: ${{ env.TRX_DIRECTORY }}
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BADGE_STYLE: emoji