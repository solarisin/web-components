# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Authenticates packages to push to GPR
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x' # SDK Version to use.
          
      - name: .NET Add NuGet source
        run: dotnet nuget update source 'github' --username 'solarisin' --password '${{ secrets.NUGET_GITHUB_TOKEN }}' --store-password-in-clear-text

      - name: .NET Build Solution
        run: dotnet build ./Solarisin.Web.Components.sln --configuration Release
        
      - name: .NET Execute Unit Tests
        run: dotnet test ./Solarisin.Web.Components.sln --no-restore --verbosity normal --configuration Release
        
      - name: Upload .NET Unit Test results
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts
          path: ./test/output/*
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
        
      - name: Publish NuGet package to GitHub
        run: dotnet nuget push ./src/Solarisin.Web.Components/bin/Release/*.nupkg --source 'github' --api-key '${{ secrets.NUGET_GITHUB_TOKEN }}' --skip-duplicate
