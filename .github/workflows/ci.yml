# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Authenticates packages to push to GPR
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x' # SDK Version to use.]
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      #Add the github nuget source see: https://github.com/actions/setup-dotnet/issues/167
      - name: Add Github NuGet Package Source
        shell: bash
        run: dotnet nuget add source --username solarisin --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "http://nuget.pkg.github.com/solarisin/index.json"
      
      - name: .NET restore solution
        run: dotnet restore ./src/Solarisin.Web.Components.sln
      
      - name: Build Solution
        run: dotnet build ./src/Solarisin.Web.Components.sln
        
      - name: Publish the package to GPR
        run: dotnet nuget push ./src/Solarisin.Web.Components/bin/Release/*.nupkg
